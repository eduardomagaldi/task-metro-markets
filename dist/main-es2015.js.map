{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialogs/add/add.dialog.component.ts","./src/app/dialogs/add/add.dialog.html","./src/app/dialogs/delete/delete.dialog.component.ts","./src/app/dialogs/delete/delete.dialog.html","./src/app/dialogs/edit/edit.dialog.component.ts","./src/app/dialogs/edit/edit.dialog.html","./src/app/dialogs/view/view.dialog.component.ts","./src/app/dialogs/view/view.dialog.html","./src/app/models/product.ts","./src/app/services/data.service.ts","./src/app/services/productDataSource.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {DataService} from './services/data.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\r\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\r\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\r\nimport {fromEvent} from 'rxjs';\r\nimport {ProductDataSource} from './services/productDataSource.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {ViewDialogComponent} from './dialogs/view/view.dialog.component';\r\nimport { Product } from './models/product';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  displayedColumns = ['image', 'id', 'name', 'url', 'price', 'actions'];\r\n  exampleDatabase: DataService | null;\r\n  dataSource: ProductDataSource | null;\r\n  totalCount: number;\r\n  pageEvent: PageEvent;\r\n  index: number;\r\n  id: number;\r\n\r\n  constructor(public httpClient: HttpClient,\r\n              public dialog: MatDialog,\r\n              public dataService: DataService) {}\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild('filter',  {static: true}) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddDialogComponent, {\r\n      data: {\r\n        product: new Product(),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  viewProduct(id: number) {\r\n    this.dialog.open(ViewDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id)\r\n      }\r\n    });\r\n  }\r\n\r\n  startEdit(id: number) {\r\n    const dialogRef = this.dialog.open(EditDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  deleteItem(id: number) {\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n\r\n  public loadData() {\r\n    this.exampleDatabase = new DataService(this.httpClient);\r\n    this.dataSource = new ProductDataSource(this.exampleDatabase, this.paginator, this.sort);\r\n    this.exampleDatabase.totalProductsCount.subscribe(val => this.totalCount = val);\r\n    fromEvent(this.filter.nativeElement, 'keyup').pipe(debounceTime(150), distinctUntilChanged())\r\n      .subscribe(() => {\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 7 EXTRA\r\n   * As you can see now we have 10 items in state but we have more items in total.\r\n   * That can be checked in response totalCount (if for some reason totalCount less than 10, please change filter[top][phrase] :P)\r\n   *\r\n   * Challenge is to have lazy loading items, on page change we want to request next N products (based on page size).\r\n   * And also append those items to the local state of table.\r\n   *\r\n   * This function is being executed on every pagination request.\r\n   */\r\n  getServerData(event: PageEvent) {\r\n    this.exampleDatabase.getProducts((event.pageIndex * event.pageSize).toString());\r\n\r\n    return event;\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <img src=\"assets/mm_logo.svg\" class=\"logo\" alt=\"METRO Markets logo\">\r\n  <span>CRUD Example</span>\r\n  <span class=\"spacer\"></span>\r\n  Reload data:\r\n  <button mat-icon-button (click)=\"refresh()\">\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<div class=\"container mat-elevation-z8\">\r\n\r\n  <div class=\"form\">\r\n    <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n      <input matInput #filter placeholder=\"Filter issues\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n\r\n    <ng-container matColumnDef=\"image\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Image</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><img class=\"img-product\" [src]=\"row.image\" [alt]=\"row.name\"></mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"id\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\" >{{row.id}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"url\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Url</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\">page</a></mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.price}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- actions -->\r\n    <ng-container matColumnDef=\"actions\">\r\n      <mat-header-cell *matHeaderCellDef>\r\n        <button mat-icon-button color=\"primary\" (click)=\"addNew()\">\r\n          <mat-icon aria-label=\"Example icon-button with a heart icon\">add</mat-icon>\r\n        </button>\r\n      </mat-header-cell>\r\n\r\n      <mat-cell *matCellDef=\"let row;\">\r\n        <button mat-icon-button color=\"accent\" (click)=\"viewProduct(row.id)\">\r\n          <mat-icon aria-label=\"View\">visibility</mat-icon>\r\n        </button>\r\n\r\n        <button mat-icon-button color=\"accent\" (click)=\"startEdit(row.id)\">\r\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n        </button>\r\n\r\n        <button mat-icon-button color=\"accent\" (click)=\"deleteItem(row.id)\">\r\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n\r\n\r\n\r\n  <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n    No results\r\n  </div>\r\n\r\n  <mat-paginator #paginator\r\n                 [length]=\"totalCount\"\r\n                 [pageIndex]=\"0\"\r\n                 [pageSize]=\"10\"\r\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                 (page)=\"pageEvent = getServerData($event)\">\r\n  </mat-paginator>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {DataService} from './services/data.service';\r\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\r\nimport {ViewDialogComponent} from './dialogs/view/view.dialog.component';\r\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\r\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ViewDialogComponent,\r\n    AddDialogComponent,\r\n    EditDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  entryComponents: [\r\n    AddDialogComponent,\r\n    EditDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-add.dialog',\r\n  templateUrl: '../../dialogs/add/add.dialog.html',\r\n  styleUrls: ['../../dialogs/add/add.dialog.css']\r\n})\r\n\r\nexport class AddDialogComponent {\r\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {product: Product, dataService: DataService},\r\n              ) {\r\n              }\r\n\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required') ? 'Required field' :\r\n      this.formControl.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onAdd(): void {\r\n    this.data.dataService.addIssue(this.data.product);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Add new product</h3>\r\n\r\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.product.id\" name=\"id\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"data.product.name\" name=\"name\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Image URL\" [(ngModel)]=\"data.product.image\" name=\"image\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Url\" [(ngModel)]=\"data.product.url\" name=\"url\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Price\" [(ngModel)]=\"data.product.price\" name=\"price\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button type=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"onAdd()\">Save</button>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport { Product } from '../../models/product';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete.dialog',\r\n  templateUrl: '../../dialogs/delete/delete.dialog.html',\r\n  styleUrls: ['../../dialogs/delete/delete.dialog.css']\r\n})\r\nexport class DeleteDialogComponent {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { product: Product, dataService: DataService },\r\n  ) {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onDelete(): void {\r\n    this.data.dataService.deleteIssue(this.data.product.id);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    Id: {{data.product.id}}\r\n    <p></p>\r\n    Title: {{data.product.name}}\r\n    <p></p>\r\n    Price: {{data.product.price}}\r\n    <p></p>\r\n    Url: {{data.product.url}}\r\n    <p></p>\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"1\" (click)=\"onDelete()\">Delete</button>\r\n    <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-baza.dialog',\r\n  templateUrl: '../../dialogs/edit/edit.dialog.html',\r\n  styleUrls: ['../../dialogs/edit/edit.dialog.css']\r\n})\r\nexport class EditDialogComponent {\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { product: Product, dataService: DataService },\r\n              ) { }\r\n\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required') ? 'Required field' :\r\n      this.formControl.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onUpdate(): void {\r\n    this.data.dataService.updateIssue(this.data.product);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Product id: {{data.product.id}}</h3>\r\n\r\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <textarea matInput class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"data.product.name\" name=\"name\" required ></textarea>\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Image URL\" [(ngModel)]=\"data.product.image\" name=\"image\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n        <mat-form-field color=\"accent\">\r\n          <input matInput placeholder=\"Url\" [(ngModel)]=\"data.product.url\" name=\"url\">\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Price\" [(ngModel)]=\"data.product.price\" name=\"price\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button type=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"onUpdate()\">Save</button>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-view.dialog',\r\n  templateUrl: '../../dialogs/view/view.dialog.html',\r\n  styleUrls: ['../../dialogs/view/view.dialog.css']\r\n})\r\n\r\n\r\n\r\nexport class ViewDialogComponent {\r\n  constructor(public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {product: Product}) { }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Product id: {{data.product.id}}</h3>\r\n\r\n  <form class=\"mat-dialog-content view-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"column\">\r\n        <img class=\"img-product\" [src]=\"data.product.image\" [alt]=\"data.product.name\">\r\n      </div>\r\n\r\n      <div class=\"column\">\r\n        <span class=\"data\">{{data.product.name}}</span>\r\n\r\n        <span class=\"data\">{{data.product.price}}</span>\r\n\r\n        <hr>\r\n\r\n        <a mat-button href=\"{{data.product.url}}\">Buy</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!--FIND_ME Task 6-->\r\n<!--Please change the template so it will look like this on desktop:-->\r\n<!-- src/assets/view_modal_desktop.png-->\r\n<!--And like this on mobile.-->\r\n<!-- src/assets/view_mobile_desktop.png-->\r\n<!--Breakpoint is 600px-->\r\n<!--Bonus: make image always fit to square of 300x300px-->\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n  url: string;\r\n  price: number;\r\n}\r\n","import {Injectable, Output, EventEmitter} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Product} from '../models/product';\r\nimport {ResponseProduct} from '../models/responseProduct';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  private readonly API_URL = 'https://app-search.prod.de.metro-marketplace.cloud/api/search';\r\n  private readonly PRODUCT_PAGE_BASE_URL = 'https://www.metro.de/marktplatz/product/';\r\n  private dataList: BehaviorSubject<Product[]> = new BehaviorSubject<Product[]>([]);\r\n\r\n  totalProductsCount: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  dataListUpdated: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  constructor (private httpClient: HttpClient) {\r\n    this.dataList.subscribe(() => {\r\n      this.dataListUpdated.next(true);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 4\r\n   * Currently data from Add and Edit modals is translated to\r\n   * app component through dialogData.\r\n   *\r\n   * That is bad because we need some variable in DataService only for transporting.\r\n   * And also because In that case DataService violates Single Responsibility.\r\n   *\r\n   * Please refactor that part by getting rid of dialogData, while requesting Database only from app component.\r\n   *\r\n   * Hint for non-angular - @Output EventEmitter\r\n   */\r\n\r\n  /** CRUD METHODS */\r\n  getProducts(ofset?: string): void {\r\n    this.httpClient.get<{items: ResponseProduct[], totalCount: number}>(this.API_URL, {\r\n      params: {\r\n        offset: ofset || '0',\r\n        limit: '10',\r\n        'filter[top][phrase]': 'samowar teekocher',\r\n        'sort[price]': 'desc'\r\n      }\r\n    }).subscribe((data) => {\r\n        /**\r\n         * FIND_ME Task 1\r\n         * fix issues to save items and totalCount from response to local state\r\n         */\r\n        this.dataList.next(data.items.map(el => this.mapToProduct(el)));\r\n\r\n        this.totalProductsCount.next(data.totalCount);\r\n      });\r\n  }\r\n\r\n  mapToProduct(data: ResponseProduct): Product {\r\n    const { id, name, image, bestOffer: { priceVatExcluded }} = data;\r\n    return {\r\n      id,\r\n      name,\r\n      image,\r\n      price: parseFloat(priceVatExcluded),\r\n      url: `${this.PRODUCT_PAGE_BASE_URL}${id}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 5\r\n   * After you've removed dialogData, we can use addIssue, updateIssue and deleteIssue in a proper way.\r\n   *\r\n   * Please refactor these functions and move all logic from new @Outputs and from app.component in data service.\r\n   * That will allow us to have proper abstraction layer between local items list and component,\r\n   * and not to expose details of our items storage.\r\n   *\r\n   * Aim is to remove access to this.exampleDatabase.dataList.value from outside of this service and make `dataList` private.\r\n   */\r\n  addIssue (issue: Product): void {\r\n    const dataList = this.dataList.value.slice();\r\n    dataList.push(issue);\r\n    this.dataList.next(dataList);\r\n  }\r\n\r\n  updateIssue (issue: Product): void {\r\n    const foundIndex = this.dataList.value.findIndex(x => {\r\n      return x.id === issue.id;\r\n    });\r\n\r\n    this.dataList.value[foundIndex] = issue;\r\n  }\r\n\r\n  deleteIssue (id: number): void {\r\n    const dataList = this.dataList.value.filter((product) => product.id !== id);\r\n    this.dataList.next(dataList);\r\n  }\r\n\r\n  find(id: number) {\r\n    return this.dataList.value.find(x => x.id === id);\r\n  }\r\n\r\n  filter(filter: string) {\r\n    return this.dataList.value.slice().filter((issue: Product) => {\r\n      if (issue) {\r\n        return issue.id.toString().toUpperCase().indexOf(filter) > -1 ||\r\n          issue.name.toUpperCase().indexOf(filter) > -1 ||\r\n          issue.price.toString().toUpperCase().indexOf(filter) > -1;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {DataSource} from '@angular/cdk/collections';\r\nimport {Product} from '../models/product';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {DataService} from './data.service';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport class ProductDataSource extends DataSource<Product> {\r\n  filterChange = new BehaviorSubject('');\r\n\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n\r\n  filteredData: Product[] = [];\r\n  renderedData: Product[] = [];\r\n\r\n  constructor(public exampleDatabase: DataService,\r\n              public paginator: MatPaginator,\r\n              public sort: MatSort) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => {this.paginator.pageIndex = 0});\r\n  }\r\n  connect(): Observable<Product[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataListUpdated,\r\n      this.sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    this.exampleDatabase.getProducts();\r\n\r\n    return merge(...displayDataChanges).pipe(map( () => {\r\n      /**\r\n       * FIND_ME Task 2\r\n       * Implement filtering functionality\r\n       * User will type in filter field and we will need to show items from state with that searched query in:\r\n       * - id\r\n       * - name\r\n       * - price\r\n       * SO it could be substring of one of the properties (owar in \"Samowar\")\r\n       */\r\n        const filter = this.filterChange.getValue().toUpperCase();\r\n        this.filteredData = this.exampleDatabase.filter(filter);\r\n\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        this.renderedData = sortedData.slice();\r\n\r\n        return this.renderedData;\r\n      }\r\n    ));\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Product[]): Product[] {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    /**\r\n     * FIND_ME Task 3\r\n     * Implement sorting functionality\r\n     * this.sort.active: string (id|name|url|price)\r\n     * this.sort.direction: string (asc|desc)\r\n     */\r\n    return data.sort((a, b) => {\r\n      if (a[this.sort.active] > b[this.sort.active]) {\r\n        if (this.sort.direction === 'asc') {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      }\r\n\r\n      if (a[this.sort.active] < b[this.sort.active]) {\r\n        if (this.sort.direction === 'asc') {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}