{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialogs/add/add.dialog.component.ts","webpack:///src/app/dialogs/add/add.dialog.html","webpack:///src/app/dialogs/delete/delete.dialog.component.ts","webpack:///src/app/dialogs/delete/delete.dialog.html","webpack:///src/app/dialogs/edit/edit.dialog.component.ts","webpack:///src/app/dialogs/edit/edit.dialog.html","webpack:///src/app/dialogs/view/view.dialog.component.ts","webpack:///src/app/dialogs/view/view.dialog.html","webpack:///src/app/models/product.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/productDataSource.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","httpClient","dialog","dataService","displayedColumns","loadData","dialogRef","open","data","product","exampleDatabase","afterClosed","subscribe","refreshTable","find","paginator","_changePageSize","pageSize","dataSource","sort","totalProductsCount","val","totalCount","filter","nativeElement","pipe","value","event","getProducts","pageIndex","toString","refresh","getServerData","selector","templateUrl","styleUrls","AppModule","declarations","imports","entryComponents","providers","bootstrap","AddDialogComponent","formControl","required","hasError","close","addIssue","onAdd","onCancel","DeleteDialogComponent","deleteIssue","onDelete","EditDialogComponent","updateIssue","onUpdate","ViewDialogComponent","Product","DataService","API_URL","PRODUCT_PAGE_BASE_URL","dataList","dataListUpdated","next","ofset","get","params","offset","limit","items","map","el","mapToProduct","name","image","priceVatExcluded","bestOffer","price","parseFloat","url","issue","slice","push","foundIndex","findIndex","x","toUpperCase","indexOf","ProductDataSource","filterChange","filteredData","renderedData","displayDataChanges","sortChange","page","getValue","sortedData","sortData","active","direction","a","b","environment","production","bootstrapModule","err","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {DataService} from './services/data.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\r\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\r\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\r\nimport {fromEvent} from 'rxjs';\r\nimport {ProductDataSource} from './services/productDataSource.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {ViewDialogComponent} from './dialogs/view/view.dialog.component';\r\nimport { Product } from './models/product';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  displayedColumns = ['image', 'id', 'name', 'url', 'price', 'actions'];\r\n  exampleDatabase: DataService | null;\r\n  dataSource: ProductDataSource | null;\r\n  totalCount: number;\r\n  pageEvent: PageEvent;\r\n  index: number;\r\n  id: number;\r\n\r\n  constructor(public httpClient: HttpClient,\r\n              public dialog: MatDialog,\r\n              public dataService: DataService) {}\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild('filter',  {static: true}) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddDialogComponent, {\r\n      data: {\r\n        product: new Product(),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  viewProduct(id: number) {\r\n    this.dialog.open(ViewDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id)\r\n      }\r\n    });\r\n  }\r\n\r\n  startEdit(id: number) {\r\n    const dialogRef = this.dialog.open(EditDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  deleteItem(id: number) {\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: {\r\n        product: this.exampleDatabase.find(id),\r\n        dataService: this.exampleDatabase,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.refreshTable();\r\n    });\r\n  }\r\n\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n\r\n  public loadData() {\r\n    this.exampleDatabase = new DataService(this.httpClient);\r\n    this.dataSource = new ProductDataSource(this.exampleDatabase, this.paginator, this.sort);\r\n    this.exampleDatabase.totalProductsCount.subscribe(val => this.totalCount = val);\r\n    fromEvent(this.filter.nativeElement, 'keyup').pipe(debounceTime(150), distinctUntilChanged())\r\n      .subscribe(() => {\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 7 EXTRA\r\n   * As you can see now we have 10 items in state but we have more items in total.\r\n   * That can be checked in response totalCount (if for some reason totalCount less than 10, please change filter[top][phrase] :P)\r\n   *\r\n   * Challenge is to have lazy loading items, on page change we want to request next N products (based on page size).\r\n   * And also append those items to the local state of table.\r\n   *\r\n   * This function is being executed on every pagination request.\r\n   */\r\n  getServerData(event: PageEvent) {\r\n    this.exampleDatabase.getProducts((event.pageIndex * event.pageSize).toString());\r\n\r\n    return event;\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <img src=\"assets/mm_logo.svg\" class=\"logo\" alt=\"METRO Markets logo\">\r\n  <span>CRUD Example</span>\r\n  <span class=\"spacer\"></span>\r\n  Reload data:\r\n  <button mat-icon-button (click)=\"refresh()\">\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<div class=\"container mat-elevation-z8\">\r\n\r\n  <div class=\"form\">\r\n    <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n      <input matInput #filter placeholder=\"Filter issues\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n\r\n    <ng-container matColumnDef=\"image\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Image</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><img class=\"img-product\" [src]=\"row.image\" [alt]=\"row.name\"></mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"id\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\" >{{row.id}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"url\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Url</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\">page</a></mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.price}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- actions -->\r\n    <ng-container matColumnDef=\"actions\">\r\n      <mat-header-cell *matHeaderCellDef>\r\n        <button mat-icon-button color=\"primary\" (click)=\"addNew()\">\r\n          <mat-icon aria-label=\"Example icon-button with a heart icon\">add</mat-icon>\r\n        </button>\r\n      </mat-header-cell>\r\n\r\n      <mat-cell *matCellDef=\"let row;\">\r\n        <button mat-icon-button color=\"accent\" (click)=\"viewProduct(row.id)\">\r\n          <mat-icon aria-label=\"View\">visibility</mat-icon>\r\n        </button>\r\n\r\n        <button mat-icon-button color=\"accent\" (click)=\"startEdit(row.id)\">\r\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n        </button>\r\n\r\n        <button mat-icon-button color=\"accent\" (click)=\"deleteItem(row.id)\">\r\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n\r\n\r\n\r\n  <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n    No results\r\n  </div>\r\n\r\n  <mat-paginator #paginator\r\n                 [length]=\"totalCount\"\r\n                 [pageIndex]=\"0\"\r\n                 [pageSize]=\"10\"\r\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                 (page)=\"pageEvent = getServerData($event)\">\r\n  </mat-paginator>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {DataService} from './services/data.service';\r\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\r\nimport {ViewDialogComponent} from './dialogs/view/view.dialog.component';\r\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\r\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ViewDialogComponent,\r\n    AddDialogComponent,\r\n    EditDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  entryComponents: [\r\n    AddDialogComponent,\r\n    EditDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-add.dialog',\r\n  templateUrl: '../../dialogs/add/add.dialog.html',\r\n  styleUrls: ['../../dialogs/add/add.dialog.css']\r\n})\r\n\r\nexport class AddDialogComponent {\r\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {product: Product, dataService: DataService},\r\n              ) {\r\n              }\r\n\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required') ? 'Required field' :\r\n      this.formControl.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onAdd(): void {\r\n    this.data.dataService.addIssue(this.data.product);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Add new product</h3>\r\n\r\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.product.id\" name=\"id\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"data.product.name\" name=\"name\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Image URL\" [(ngModel)]=\"data.product.image\" name=\"image\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Url\" [(ngModel)]=\"data.product.url\" name=\"url\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Price\" [(ngModel)]=\"data.product.price\" name=\"price\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button type=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"onAdd()\">Save</button>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport { Product } from '../../models/product';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete.dialog',\r\n  templateUrl: '../../dialogs/delete/delete.dialog.html',\r\n  styleUrls: ['../../dialogs/delete/delete.dialog.css']\r\n})\r\nexport class DeleteDialogComponent {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { product: Product, dataService: DataService },\r\n  ) {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onDelete(): void {\r\n    this.data.dataService.deleteIssue(this.data.product.id);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    Id: {{data.product.id}}\r\n    <p></p>\r\n    Title: {{data.product.name}}\r\n    <p></p>\r\n    Price: {{data.product.price}}\r\n    <p></p>\r\n    Url: {{data.product.url}}\r\n    <p></p>\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"1\" (click)=\"onDelete()\">Delete</button>\r\n    <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-baza.dialog',\r\n  templateUrl: '../../dialogs/edit/edit.dialog.html',\r\n  styleUrls: ['../../dialogs/edit/edit.dialog.css']\r\n})\r\nexport class EditDialogComponent {\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { product: Product, dataService: DataService },\r\n              ) { }\r\n\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required') ? 'Required field' :\r\n      this.formControl.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onUpdate(): void {\r\n    this.data.dataService.updateIssue(this.data.product);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Product id: {{data.product.id}}</h3>\r\n\r\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <textarea matInput class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"data.product.name\" name=\"name\" required ></textarea>\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput class=\"form-control\" placeholder=\"Image URL\" [(ngModel)]=\"data.product.image\" name=\"image\" required >\r\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n        <mat-form-field color=\"accent\">\r\n          <input matInput placeholder=\"Url\" [(ngModel)]=\"data.product.url\" name=\"url\">\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <mat-form-field color=\"accent\">\r\n        <input matInput placeholder=\"Price\" [(ngModel)]=\"data.product.price\" name=\"price\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button type=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"onUpdate()\">Save</button>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'app-view.dialog',\r\n  templateUrl: '../../dialogs/view/view.dialog.html',\r\n  styleUrls: ['../../dialogs/view/view.dialog.css']\r\n})\r\n\r\n\r\n\r\nexport class ViewDialogComponent {\r\n  constructor(public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {product: Product}) { }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Product id: {{data.product.id}}</h3>\r\n\r\n  <form class=\"mat-dialog-content view-dialog-content\" #formControl=\"ngForm\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"column\">\r\n        <img class=\"img-product\" [src]=\"data.product.image\" [alt]=\"data.product.name\">\r\n      </div>\r\n\r\n      <div class=\"column\">\r\n        <span class=\"data\">{{data.product.name}}</span>\r\n\r\n        <span class=\"data\">{{data.product.price}}</span>\r\n\r\n        <hr>\r\n\r\n        <a mat-button href=\"{{data.product.url}}\">Buy</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"onCancel()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!--FIND_ME Task 6-->\r\n<!--Please change the template so it will look like this on desktop:-->\r\n<!-- src/assets/view_modal_desktop.png-->\r\n<!--And like this on mobile.-->\r\n<!-- src/assets/view_mobile_desktop.png-->\r\n<!--Breakpoint is 600px-->\r\n<!--Bonus: make image always fit to square of 300x300px-->\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n  url: string;\r\n  price: number;\r\n}\r\n","import {Injectable, Output, EventEmitter} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Product} from '../models/product';\r\nimport {ResponseProduct} from '../models/responseProduct';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  private readonly API_URL = 'https://app-search.prod.de.metro-marketplace.cloud/api/search';\r\n  private readonly PRODUCT_PAGE_BASE_URL = 'https://www.metro.de/marktplatz/product/';\r\n  private dataList: BehaviorSubject<Product[]> = new BehaviorSubject<Product[]>([]);\r\n\r\n  totalProductsCount: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  dataListUpdated: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  constructor (private httpClient: HttpClient) {\r\n    this.dataList.subscribe(() => {\r\n      this.dataListUpdated.next(true);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 4\r\n   * Currently data from Add and Edit modals is translated to\r\n   * app component through dialogData.\r\n   *\r\n   * That is bad because we need some variable in DataService only for transporting.\r\n   * And also because In that case DataService violates Single Responsibility.\r\n   *\r\n   * Please refactor that part by getting rid of dialogData, while requesting Database only from app component.\r\n   *\r\n   * Hint for non-angular - @Output EventEmitter\r\n   */\r\n\r\n  /** CRUD METHODS */\r\n  getProducts(ofset?: string): void {\r\n    this.httpClient.get<{items: ResponseProduct[], totalCount: number}>(this.API_URL, {\r\n      params: {\r\n        offset: ofset || '0',\r\n        limit: '10',\r\n        'filter[top][phrase]': 'samowar teekocher',\r\n        'sort[price]': 'desc'\r\n      }\r\n    }).subscribe((data) => {\r\n        /**\r\n         * FIND_ME Task 1\r\n         * fix issues to save items and totalCount from response to local state\r\n         */\r\n        this.dataList.next(data.items.map(el => this.mapToProduct(el)));\r\n\r\n        this.totalProductsCount.next(data.totalCount);\r\n      });\r\n  }\r\n\r\n  mapToProduct(data: ResponseProduct): Product {\r\n    const { id, name, image, bestOffer: { priceVatExcluded }} = data;\r\n    return {\r\n      id,\r\n      name,\r\n      image,\r\n      price: parseFloat(priceVatExcluded),\r\n      url: `${this.PRODUCT_PAGE_BASE_URL}${id}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * FIND_ME Task 5\r\n   * After you've removed dialogData, we can use addIssue, updateIssue and deleteIssue in a proper way.\r\n   *\r\n   * Please refactor these functions and move all logic from new @Outputs and from app.component in data service.\r\n   * That will allow us to have proper abstraction layer between local items list and component,\r\n   * and not to expose details of our items storage.\r\n   *\r\n   * Aim is to remove access to this.exampleDatabase.dataList.value from outside of this service and make `dataList` private.\r\n   */\r\n  addIssue (issue: Product): void {\r\n    const dataList = this.dataList.value.slice();\r\n    dataList.push(issue);\r\n    this.dataList.next(dataList);\r\n  }\r\n\r\n  updateIssue (issue: Product): void {\r\n    const foundIndex = this.dataList.value.findIndex(x => {\r\n      return x.id === issue.id;\r\n    });\r\n\r\n    this.dataList.value[foundIndex] = issue;\r\n  }\r\n\r\n  deleteIssue (id: number): void {\r\n    const dataList = this.dataList.value.filter((product) => product.id !== id);\r\n    this.dataList.next(dataList);\r\n  }\r\n\r\n  find(id: number) {\r\n    return this.dataList.value.find(x => x.id === id);\r\n  }\r\n\r\n  filter(filter: string) {\r\n    return this.dataList.value.slice().filter((issue: Product) => {\r\n      if (issue) {\r\n        return issue.id.toString().toUpperCase().indexOf(filter) > -1 ||\r\n          issue.name.toUpperCase().indexOf(filter) > -1 ||\r\n          issue.price.toString().toUpperCase().indexOf(filter) > -1;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {DataSource} from '@angular/cdk/collections';\r\nimport {Product} from '../models/product';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {DataService} from './data.service';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport class ProductDataSource extends DataSource<Product> {\r\n  filterChange = new BehaviorSubject('');\r\n\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n\r\n  filteredData: Product[] = [];\r\n  renderedData: Product[] = [];\r\n\r\n  constructor(public exampleDatabase: DataService,\r\n              public paginator: MatPaginator,\r\n              public sort: MatSort) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => {this.paginator.pageIndex = 0});\r\n  }\r\n  connect(): Observable<Product[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataListUpdated,\r\n      this.sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page\r\n    ];\r\n\r\n    this.exampleDatabase.getProducts();\r\n\r\n    return merge(...displayDataChanges).pipe(map( () => {\r\n      /**\r\n       * FIND_ME Task 2\r\n       * Implement filtering functionality\r\n       * User will type in filter field and we will need to show items from state with that searched query in:\r\n       * - id\r\n       * - name\r\n       * - price\r\n       * SO it could be substring of one of the properties (owar in \"Samowar\")\r\n       */\r\n        const filter = this.filterChange.getValue().toUpperCase();\r\n        this.filteredData = this.exampleDatabase.filter(filter);\r\n\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        this.renderedData = sortedData.slice();\r\n\r\n        return this.renderedData;\r\n      }\r\n    ));\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Product[]): Product[] {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    /**\r\n     * FIND_ME Task 3\r\n     * Implement sorting functionality\r\n     * this.sort.active: string (id|name|url|price)\r\n     * this.sort.direction: string (asc|desc)\r\n     */\r\n    return data.sort((a, b) => {\r\n      if (a[this.sort.active] > b[this.sort.active]) {\r\n        if (this.sort.direction === 'asc') {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      }\r\n\r\n      if (a[this.sort.active] < b[this.sort.active]) {\r\n        if (this.sort.direction === 'asc') {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}